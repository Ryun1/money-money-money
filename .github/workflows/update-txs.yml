name: Committee Transaction Numbers

on:
  workflow_dispatch:
  # schedule:
  #   - cron: '0 0 * * *' 

jobs:
  update-vote-totals:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        pip install requests pyyaml

    - name: Query koios for recent transactions
      id: query_api
      run: |
        python -c "
                import requests
                import yaml
                import os

                def get_transactions(addresses):
                    url = 'https://preprod.koios.rest/api/v1/address_txs'
                    headers = {'accept': 'application/json', 'content-type': 'application/json'}
                    data = {'_addresses': addresses}
                    response = requests.post(url, headers=headers, json=data)
                    return response.json()

                def get_tx_info(tx_hashes):
                    url = 'https://preprod.koios.rest/api/v1/tx_info'
                    headers = {'accept': 'application/json', 'content-type': 'application/json'}
                    data = {'_tx_hashes': tx_hashes}
                    response = requests.post(url, headers=headers, json=data)
                    return response.json()

                def update_markdown(file_path, transactions):
                    with open(file_path, 'r') as file:
                        lines = file.readlines()

                    tx_table_start = lines.index('| txid | amount | receiving addr | block height |  reason |\n')
                    tx_table_end = lines.index('\n', tx_table_start + 1)
                    existing_txids = [line.split('|')[1].strip() for line in lines[tx_table_start + 2:tx_table_end]]

                    new_lines = lines[:tx_table_end]
                    for tx in transactions:
                        if tx['tx_hash'] not in existing_txids:
                            new_lines.append(f"| {tx['tx_hash']} | +{tx['amount']} | N/A | {tx['block_height']} | funding received |\n")
                    new_lines.extend(lines[tx_table_end:])

                    with open(file_path, 'w') as file:
                        file.writelines(new_lines)

                addresses = []
                for file_name in os.listdir('gitbook'):
                    if file_name.endswith('.md'):
                        with open(f'gitbook/{file_name}', 'r') as file:
                            for line in file:
                                if line.startswith('- `addr'):
                                    addresses.append(line.strip().strip('- `'))

                transactions = get_transactions(addresses)
                tx_hashes = [tx['tx_hash'] for tx in transactions]
                tx_info = get_tx_info(tx_hashes)

                for file_name in os.listdir('gitbook'):
                    if file_name.endswith('.md'):
                        update_markdown(f'gitbook/{file_name}', tx_info)
                "

    - name: Commit and push changes
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        git add .
        git commit -m "Update transactions"
        git push origin HEAD:main